{
  "address": "0x5A8AcB68306CE2dBEE0904897DC88ea763cC34b3",
  "abi": [
    {
      "inputs": [],
      "name": "InvaildCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoPayable",
      "type": "error"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allCoffeeContracts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_coffeeIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_handle",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkMsgSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_handle",
          "type": "string"
        }
      ],
      "name": "createCoffeeContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numCoffeeContracts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "searchHandles",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb5a09d3ff44efd8375cb16c072d0b85f496def35872ed19274a65622fbf97046",
  "receipt": {
    "to": null,
    "from": "0xe6606766A52848b29c1C5E80c7b03eF41F126d74",
    "contractAddress": "0x5A8AcB68306CE2dBEE0904897DC88ea763cC34b3",
    "transactionIndex": 28,
    "gasUsed": "1675315",
    "logsBloom": "0x
    "blockHash": "0xf16c435d124ff491b7ed002764f5bc7544c79086a24378815b656ff13e471dca",
    "transactionHash": "0xb5a09d3ff44efd8375cb16c072d0b85f496def35872ed19274a65622fbf97046",
    "logs": [
      {
        "transactionIndex": 28,
        "blockNumber": 26674626,
        "transactionHash": "0xb5a09d3ff44efd8375cb16c072d0b85f496def35872ed19274a65622fbf97046",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000e6606766a52848b29c1c5e80c7b03ef41f126d74",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000007742065b7d8320000000000000000000000000000000000000000000000001ad28264e9b1ba6400000000000000000000000000000000000000000000032859c52fab8f3a0ffb0000000000000000000000000000000000000000000000001acb0e4483f9e23200000000000000000000000000000000000000000000032859cca3cbf4f1e82d",
        "logIndex": 170,
        "blockHash": "0xf16c435d124ff491b7ed002764f5bc7544c79086a24378815b656ff13e471dca"
      }
    ],
    "blockNumber": 26674626,
    "cumulativeGasUsed": "7864609",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ec14366d984d108207b22d14d404bafb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvaildCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoPayable\",\"type\":\"error\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allCoffeeContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_coffeeIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_handle\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkMsgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_handle\",\"type\":\"string\"}],\"name\":\"createCoffeeContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numCoffeeContracts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"searchHandles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkMsgSender()\":{\"details\":\"check the balance of the owner\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoffeeFactory.sol\":\"CoffeeFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BuyMeCoffee.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n// import \\\"./modified/Ownable.sol\\\";\\r\\nimport \\\"./utils/Context.sol\\\";\\r\\n\\r\\nerror Unauthorized();\\r\\nerror InvalidAmount();\\r\\nerror InvaildCall();\\r\\n\\r\\ncontract BuyMeCoffee is Context {\\r\\n    // Event to emit when a Memo is created.\\r\\n    event NewMemo(\\r\\n        address indexed from,\\r\\n        uint256 timestamp,\\r\\n        string name,\\r\\n        string message\\r\\n    );\\r\\n\\r\\n    // Memo struct.\\r\\n    struct Memo {\\r\\n        address from;\\r\\n        uint256 timestamp;\\r\\n        string name;\\r\\n        string message;\\r\\n    }\\r\\n\\r\\n    // Address of contract deployer. Marked payable so that\\r\\n    // we can withdraw to this address later.\\r\\n    address payable _owner;\\r\\n\\r\\n    string public _handle;\\r\\n\\r\\n    // List of all memos received from coffee purchases.\\r\\n    Memo[] memos;\\r\\n\\r\\n    constructor(string memory __handle, address __owner) {\\r\\n        // Store the address of the deployer as a payable address.\\r\\n        // When we withdraw funds, we'll withdraw here.\\r\\n        _owner = payable(__owner);\\r\\n        _handle = __handle;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev fetches all stored memos\\r\\n     */\\r\\n    function getMemos() public view returns (Memo[] memory) {\\r\\n        return memos;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev buy a coffee for owner (sends an ETH tip and leaves a memo)\\r\\n     * @param _name name of the coffee purchaser\\r\\n     * @param _message a nice message from the purchaser\\r\\n     */\\r\\n    function buyCoffee(string memory _name, string memory _message)\\r\\n        public\\r\\n        payable\\r\\n    {\\r\\n        // Must accept more than 0 ETH for a coffee.\\r\\n        if (msg.value <= 0) revert InvalidAmount();\\r\\n\\r\\n        // Add the memo to storage!\\r\\n        memos.push(Memo(msg.sender, block.timestamp, _name, _message));\\r\\n\\r\\n        // Emit a NewMemo event with details about the memo.\\r\\n        emit NewMemo(msg.sender, block.timestamp, _name, _message);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev send the entire balance stored in this contract to the owner\\r\\n     */\\r\\n    function withdrawTips() public {\\r\\n        // if (msg.sender != owner()) {\\r\\n        //     revert Unauthorized();\\r\\n        // }\\r\\n        // require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        require(_owner.send(address(this).balance));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev check the balance of the owner\\r\\n     */\\r\\n    function checkBalance() public view returns (uint256 balance) {\\r\\n        // if (msg.sender != owner()) {\\r\\n        //     revert Unauthorized();\\r\\n        // }\\r\\n        // require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev check the balance of the owner\\r\\n     */\\r\\n    function checkMsgSender() public view returns (address) {\\r\\n        // if (msg.sender != owner()) {\\r\\n        //     revert Unauthorized();\\r\\n        // }\\r\\n        // return _msgSender();\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev set receive function\\r\\n     */\\r\\n    receive() external payable {\\r\\n        buyCoffee(\\\"default anon\\\", \\\"here's a coffee\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev set fallback function\\r\\n     */\\r\\n    fallback() external {\\r\\n        revert InvaildCall();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6a80b66588d6cc660901a791e36aa41339313d06fc894eaed9dfed336932934c\",\"license\":\"MIT\"},\"contracts/CoffeeFactory.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./BuyMeCoffee.sol\\\";\\r\\n// import \\\"./modified/Ownable.sol\\\";\\r\\n\\r\\nerror NoPayable();\\r\\n\\r\\ncontract CoffeeFactory {\\r\\n    // BuyMeCoffee[] public coffees;\\r\\n    // address testAddress = 0x0000000000000000000000000000000000000001;\\r\\n\\r\\n    struct CoffeeFactoryStruct {\\r\\n        uint256 _coffeeIndex;\\r\\n        address _contract;\\r\\n        address _owner;\\r\\n        string _handle;\\r\\n    }\\r\\n\\r\\n    mapping(uint256 => CoffeeFactoryStruct) public allCoffeeContracts;\\r\\n\\r\\n    mapping(string => address) public searchHandles;\\r\\n\\r\\n    uint256 public numCoffeeContracts;\\r\\n\\r\\n    function createCoffeeContract(string calldata _handle) public {\\r\\n        // Create a new coffee contract\\r\\n        BuyMeCoffee newCoffeeContract = new BuyMeCoffee(_handle, msg.sender);\\r\\n        // BuyMeCoffee newCoffeeContract = new BuyMeCoffee(_handle, testAddress);\\r\\n\\r\\n        // Add the new coffee contract to the mapping\\r\\n        allCoffeeContracts[numCoffeeContracts] = (\\r\\n            CoffeeFactoryStruct(\\r\\n                numCoffeeContracts,\\r\\n                address(newCoffeeContract),\\r\\n                msg.sender,\\r\\n                _handle\\r\\n            )\\r\\n        );\\r\\n\\r\\n        searchHandles[_handle] = address(newCoffeeContract);\\r\\n\\r\\n        // Increment the number of coffee contracts\\r\\n        numCoffeeContracts++;\\r\\n\\r\\n        // Emit the event\\r\\n        // emit NewCoffeeContract(msg.sender, newCoffeeContract._coffeeIndex, newCoffeeContract._contract, newCoffeeContract._owner);\\r\\n\\r\\n        // Return the new coffee contract\\r\\n        // return newCoffeeContract;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev check the balance of the owner\\r\\n     */\\r\\n    function checkMsgSender() public view returns (address) {\\r\\n        // if (msg.sender != owner()) {\\r\\n        //     revert Unauthorized();\\r\\n        // }\\r\\n        // return _msgSender();\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev set receive function\\r\\n     */\\r\\n    receive() external payable {\\r\\n        revert NoPayable();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev set fallback function\\r\\n     */\\r\\n    fallback() external {\\r\\n        revert InvaildCall();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x79a8b19d241dbef2f6b776511074fc8d00eec7a95185a988155e4cdfd7aa2825\",\"license\":\"MIT\"},\"contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611d7d806100206000396000f3fe608060405260043610620000555760003560e01c80633d6a607e14620000cd5780634cd3d5ca14620001145780637682edfb1462000144578063d980c6f51462000172578063ef89fc5114620001b6576200008d565b366200008d576040517f6eccb00d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3480156200009a57600080fd5b506040517f0dfe893a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b348015620000da57600080fd5b50620000f96004803603810190620000f391906200066c565b620001e6565b6040516200010b949392919062000798565b60405180910390f35b3480156200012157600080fd5b506200012c620002e6565b6040516200013b9190620007ec565b60405180910390f35b3480156200015157600080fd5b506200017060048036038101906200016a919062000877565b620002ee565b005b3480156200017f57600080fd5b506200019e600480360381019062000198919062000a18565b62000510565b604051620001ad9190620007ec565b60405180910390f35b348015620001c357600080fd5b50620001ce62000559565b604051620001dd919062000a69565b60405180910390f35b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030180546200025d9062000ab5565b80601f01602080910402602001604051908101604052809291908181526020018280546200028b9062000ab5565b8015620002dc5780601f10620002b057610100808354040283529160200191620002dc565b820191906000526020600020905b815481529060010190602001808311620002be57829003601f168201915b5050505050905084565b600033905090565b600082823360405162000301906200055f565b6200030f9392919062000b1e565b604051809103906000f0801580156200032c573d6000803e3d6000fd5b509050604051806080016040528060025481526020018273ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081525060008060025481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190805190602001906200048c9291906200056d565b509050508060018484604051620004a592919062000b88565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060026000815480929190620005069062000bd2565b9190505550505050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6111278062000c2183390190565b8280546200057b9062000ab5565b90600052602060002090601f0160209004810192826200059f5760008555620005eb565b82601f10620005ba57805160ff1916838001178555620005eb565b82800160010185558215620005eb579182015b82811115620005ea578251825591602001919060010190620005cd565b5b509050620005fa9190620005fe565b5090565b5b8082111562000619576000816000905550600101620005ff565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620006468162000631565b81146200065257600080fd5b50565b60008135905062000666816200063b565b92915050565b60006020828403121562000685576200068462000627565b5b6000620006958482850162000655565b91505092915050565b620006a98162000631565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006dc82620006af565b9050919050565b620006ee81620006cf565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200073057808201518184015260208101905062000713565b8381111562000740576000848401525b50505050565b6000601f19601f8301169050919050565b60006200076482620006f4565b620007708185620006ff565b93506200078281856020860162000710565b6200078d8162000746565b840191505092915050565b6000608082019050620007af60008301876200069e565b620007be6020830186620006e3565b620007cd6040830185620006e3565b8181036060830152620007e1818462000757565b905095945050505050565b6000602082019050620008036000830184620006e3565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011262000831576200083062000809565b5b8235905067ffffffffffffffff8111156200085157620008506200080e565b5b60208301915083600182028301111562000870576200086f62000813565b5b9250929050565b6000806020838503121562000891576200089062000627565b5b600083013567ffffffffffffffff811115620008b257620008b16200062c565b5b620008c08582860162000818565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200090b8262000746565b810181811067ffffffffffffffff821117156200092d576200092c620008d1565b5b80604052505050565b6000620009426200061d565b905062000950828262000900565b919050565b600067ffffffffffffffff821115620009735762000972620008d1565b5b6200097e8262000746565b9050602081019050919050565b82818337600083830152505050565b6000620009b1620009ab8462000955565b62000936565b905082815260208101848484011115620009d057620009cf620008cc565b5b620009dd8482856200098b565b509392505050565b600082601f830112620009fd57620009fc62000809565b5b813562000a0f8482602086016200099a565b91505092915050565b60006020828403121562000a315762000a3062000627565b5b600082013567ffffffffffffffff81111562000a525762000a516200062c565b5b62000a6084828501620009e5565b91505092915050565b600060208201905062000a8060008301846200069e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000ace57607f821691505b6020821081141562000ae55762000ae462000a86565b5b50919050565b600062000af98385620006ff565b935062000b088385846200098b565b62000b138362000746565b840190509392505050565b6000604082019050818103600083015262000b3b81858762000aeb565b905062000b4c6020830184620006e3565b949350505050565b600081905092915050565b600062000b6d838562000b54565b935062000b7c8385846200098b565b82840190509392505050565b600062000b9782848662000b5f565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000bdf8262000631565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000c155762000c1462000ba3565b5b60018201905091905056fe60806040523480156200001157600080fd5b50604051620011273803806200112783398181016040528101906200003791906200034a565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600190805190602001906200008f92919062000098565b50505062000415565b828054620000a690620003df565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001b18262000166565b810181811067ffffffffffffffff82111715620001d357620001d262000177565b5b80604052505050565b6000620001e862000148565b9050620001f68282620001a6565b919050565b600067ffffffffffffffff82111562000219576200021862000177565b5b620002248262000166565b9050602081019050919050565b60005b838110156200025157808201518184015260208101905062000234565b8381111562000261576000848401525b50505050565b60006200027e6200027884620001fb565b620001dc565b9050828152602081018484840111156200029d576200029c62000161565b5b620002aa84828562000231565b509392505050565b600082601f830112620002ca57620002c96200015c565b5b8151620002dc84826020860162000267565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200031282620002e5565b9050919050565b620003248162000305565b81146200033057600080fd5b50565b600081519050620003448162000319565b92915050565b6000806040838503121562000364576200036362000152565b5b600083015167ffffffffffffffff81111562000385576200038462000157565b5b6200039385828601620002b2565b9250506020620003a68582860162000333565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003f857607f821691505b602082108114156200040f576200040e620003b0565b5b50919050565b610d0280620004256000396000f3fe6080604052600436106100745760003560e01c8063865c51721161004e578063865c51721461018c5780638da5cb5b146101b7578063b86f3c83146101e2578063c71daccb1461020d576100ef565b8063204206e11461012e5780633aaa74b21461014a5780634cd3d5ca14610161576100ef565b366100ef576100ed6040518060400160405280600c81526020017f64656661756c7420616e6f6e00000000000000000000000000000000000000008152506040518060400160405280600f81526020017f686572652773206120636f666665650000000000000000000000000000000000815250610238565b005b3480156100fb57600080fd5b506040517f0dfe893a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610148600480360381019061014391906108be565b610238565b005b34801561015657600080fd5b5061015f6103b7565b005b34801561016d57600080fd5b50610176610417565b6040516101839190610977565b60405180910390f35b34801561019857600080fd5b506101a161041f565b6040516101ae9190610b6e565b60405180910390f35b3480156101c357600080fd5b506101cc610602565b6040516101d99190610977565b60405180910390f35b3480156101ee57600080fd5b506101f761062b565b6040516102049190610bda565b60405180910390f35b34801561021957600080fd5b506102226106b9565b60405161022f9190610c0b565b60405180910390f35b60003411610272576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200183815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906103419291906106c1565b50606082015181600301908051906020019061035e9291906106c1565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c4284846040516103ab93929190610c26565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061041557600080fd5b565b600033905090565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156105f957838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546104d690610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461050290610c9a565b801561054f5780601f106105245761010080835404028352916020019161054f565b820191906000526020600020905b81548152906001019060200180831161053257829003601f168201915b5050505050815260200160038201805461056890610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461059490610c9a565b80156105e15780601f106105b6576101008083540402835291602001916105e1565b820191906000526020600020905b8154815290600101906020018083116105c457829003601f168201915b50505050508152505081526020019060010190610443565b50505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001805461063890610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461066490610c9a565b80156106b15780601f10610686576101008083540402835291602001916106b1565b820191906000526020600020905b81548152906001019060200180831161069457829003601f168201915b505050505081565b600047905090565b8280546106cd90610c9a565b90600052602060002090601f0160209004810192826106ef5760008555610736565b82601f1061070857805160ff1916838001178555610736565b82800160010185558215610736579182015b8281111561073557825182559160200191906001019061071a565b5b5090506107439190610747565b5090565b5b80821115610760576000816000905550600101610748565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107cb82610782565b810181811067ffffffffffffffff821117156107ea576107e9610793565b5b80604052505050565b60006107fd610764565b905061080982826107c2565b919050565b600067ffffffffffffffff82111561082957610828610793565b5b61083282610782565b9050602081019050919050565b82818337600083830152505050565b600061086161085c8461080e565b6107f3565b90508281526020810184848401111561087d5761087c61077d565b5b61088884828561083f565b509392505050565b600082601f8301126108a5576108a4610778565b5b81356108b584826020860161084e565b91505092915050565b600080604083850312156108d5576108d461076e565b5b600083013567ffffffffffffffff8111156108f3576108f2610773565b5b6108ff85828601610890565b925050602083013567ffffffffffffffff8111156109205761091f610773565b5b61092c85828601610890565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061096182610936565b9050919050565b61097181610956565b82525050565b600060208201905061098c6000830184610968565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6109c781610956565b82525050565b6000819050919050565b6109e0816109cd565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a20578082015181840152602081019050610a05565b83811115610a2f576000848401525b50505050565b6000610a40826109e6565b610a4a81856109f1565b9350610a5a818560208601610a02565b610a6381610782565b840191505092915050565b6000608083016000830151610a8660008601826109be565b506020830151610a9960208601826109d7565b5060408301518482036040860152610ab18282610a35565b91505060608301518482036060860152610acb8282610a35565b9150508091505092915050565b6000610ae48383610a6e565b905092915050565b6000602082019050919050565b6000610b0482610992565b610b0e818561099d565b935083602082028501610b20856109ae565b8060005b85811015610b5c5784840389528151610b3d8582610ad8565b9450610b4883610aec565b925060208a01995050600181019050610b24565b50829750879550505050505092915050565b60006020820190508181036000830152610b888184610af9565b905092915050565b600082825260208201905092915050565b6000610bac826109e6565b610bb68185610b90565b9350610bc6818560208601610a02565b610bcf81610782565b840191505092915050565b60006020820190508181036000830152610bf48184610ba1565b905092915050565b610c05816109cd565b82525050565b6000602082019050610c206000830184610bfc565b92915050565b6000606082019050610c3b6000830186610bfc565b8181036020830152610c4d8185610ba1565b90508181036040830152610c618184610ba1565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cb257607f821691505b60208210811415610cc657610cc5610c6b565b5b5091905056fea264697066735822122039d2a5ddcb84d62d8cc71d59af3462c5eef5828f278c08a93b38f14ef0eacd9964736f6c634300080a0033a2646970667358221220c095eafe91cd919cd0ee0c3ff2143d5af0d592a9385eb6eccbcb6e34aa2d1e0664736f6c634300080a0033",
  "deployedBytecode": "0x608060405260043610620000555760003560e01c80633d6a607e14620000cd5780634cd3d5ca14620001145780637682edfb1462000144578063d980c6f51462000172578063ef89fc5114620001b6576200008d565b366200008d576040517f6eccb00d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3480156200009a57600080fd5b506040517f0dfe893a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b348015620000da57600080fd5b50620000f96004803603810190620000f391906200066c565b620001e6565b6040516200010b949392919062000798565b60405180910390f35b3480156200012157600080fd5b506200012c620002e6565b6040516200013b9190620007ec565b60405180910390f35b3480156200015157600080fd5b506200017060048036038101906200016a919062000877565b620002ee565b005b3480156200017f57600080fd5b506200019e600480360381019062000198919062000a18565b62000510565b604051620001ad9190620007ec565b60405180910390f35b348015620001c357600080fd5b50620001ce62000559565b604051620001dd919062000a69565b60405180910390f35b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030180546200025d9062000ab5565b80601f01602080910402602001604051908101604052809291908181526020018280546200028b9062000ab5565b8015620002dc5780601f10620002b057610100808354040283529160200191620002dc565b820191906000526020600020905b815481529060010190602001808311620002be57829003601f168201915b5050505050905084565b600033905090565b600082823360405162000301906200055f565b6200030f9392919062000b1e565b604051809103906000f0801580156200032c573d6000803e3d6000fd5b509050604051806080016040528060025481526020018273ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081525060008060025481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190805190602001906200048c9291906200056d565b509050508060018484604051620004a592919062000b88565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060026000815480929190620005069062000bd2565b9190505550505050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6111278062000c2183390190565b8280546200057b9062000ab5565b90600052602060002090601f0160209004810192826200059f5760008555620005eb565b82601f10620005ba57805160ff1916838001178555620005eb565b82800160010185558215620005eb579182015b82811115620005ea578251825591602001919060010190620005cd565b5b509050620005fa9190620005fe565b5090565b5b8082111562000619576000816000905550600101620005ff565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620006468162000631565b81146200065257600080fd5b50565b60008135905062000666816200063b565b92915050565b60006020828403121562000685576200068462000627565b5b6000620006958482850162000655565b91505092915050565b620006a98162000631565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006dc82620006af565b9050919050565b620006ee81620006cf565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200073057808201518184015260208101905062000713565b8381111562000740576000848401525b50505050565b6000601f19601f8301169050919050565b60006200076482620006f4565b620007708185620006ff565b93506200078281856020860162000710565b6200078d8162000746565b840191505092915050565b6000608082019050620007af60008301876200069e565b620007be6020830186620006e3565b620007cd6040830185620006e3565b8181036060830152620007e1818462000757565b905095945050505050565b6000602082019050620008036000830184620006e3565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011262000831576200083062000809565b5b8235905067ffffffffffffffff8111156200085157620008506200080e565b5b60208301915083600182028301111562000870576200086f62000813565b5b9250929050565b6000806020838503121562000891576200089062000627565b5b600083013567ffffffffffffffff811115620008b257620008b16200062c565b5b620008c08582860162000818565b92509250509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200090b8262000746565b810181811067ffffffffffffffff821117156200092d576200092c620008d1565b5b80604052505050565b6000620009426200061d565b905062000950828262000900565b919050565b600067ffffffffffffffff821115620009735762000972620008d1565b5b6200097e8262000746565b9050602081019050919050565b82818337600083830152505050565b6000620009b1620009ab8462000955565b62000936565b905082815260208101848484011115620009d057620009cf620008cc565b5b620009dd8482856200098b565b509392505050565b600082601f830112620009fd57620009fc62000809565b5b813562000a0f8482602086016200099a565b91505092915050565b60006020828403121562000a315762000a3062000627565b5b600082013567ffffffffffffffff81111562000a525762000a516200062c565b5b62000a6084828501620009e5565b91505092915050565b600060208201905062000a8060008301846200069e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062000ace57607f821691505b6020821081141562000ae55762000ae462000a86565b5b50919050565b600062000af98385620006ff565b935062000b088385846200098b565b62000b138362000746565b840190509392505050565b6000604082019050818103600083015262000b3b81858762000aeb565b905062000b4c6020830184620006e3565b949350505050565b600081905092915050565b600062000b6d838562000b54565b935062000b7c8385846200098b565b82840190509392505050565b600062000b9782848662000b5f565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000bdf8262000631565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141562000c155762000c1462000ba3565b5b60018201905091905056fe60806040523480156200001157600080fd5b50604051620011273803806200112783398181016040528101906200003791906200034a565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600190805190602001906200008f92919062000098565b50505062000415565b828054620000a690620003df565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001b18262000166565b810181811067ffffffffffffffff82111715620001d357620001d262000177565b5b80604052505050565b6000620001e862000148565b9050620001f68282620001a6565b919050565b600067ffffffffffffffff82111562000219576200021862000177565b5b620002248262000166565b9050602081019050919050565b60005b838110156200025157808201518184015260208101905062000234565b8381111562000261576000848401525b50505050565b60006200027e6200027884620001fb565b620001dc565b9050828152602081018484840111156200029d576200029c62000161565b5b620002aa84828562000231565b509392505050565b600082601f830112620002ca57620002c96200015c565b5b8151620002dc84826020860162000267565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200031282620002e5565b9050919050565b620003248162000305565b81146200033057600080fd5b50565b600081519050620003448162000319565b92915050565b6000806040838503121562000364576200036362000152565b5b600083015167ffffffffffffffff81111562000385576200038462000157565b5b6200039385828601620002b2565b9250506020620003a68582860162000333565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003f857607f821691505b602082108114156200040f576200040e620003b0565b5b50919050565b610d0280620004256000396000f3fe6080604052600436106100745760003560e01c8063865c51721161004e578063865c51721461018c5780638da5cb5b146101b7578063b86f3c83146101e2578063c71daccb1461020d576100ef565b8063204206e11461012e5780633aaa74b21461014a5780634cd3d5ca14610161576100ef565b366100ef576100ed6040518060400160405280600c81526020017f64656661756c7420616e6f6e00000000000000000000000000000000000000008152506040518060400160405280600f81526020017f686572652773206120636f666665650000000000000000000000000000000000815250610238565b005b3480156100fb57600080fd5b506040517f0dfe893a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610148600480360381019061014391906108be565b610238565b005b34801561015657600080fd5b5061015f6103b7565b005b34801561016d57600080fd5b50610176610417565b6040516101839190610977565b60405180910390f35b34801561019857600080fd5b506101a161041f565b6040516101ae9190610b6e565b60405180910390f35b3480156101c357600080fd5b506101cc610602565b6040516101d99190610977565b60405180910390f35b3480156101ee57600080fd5b506101f761062b565b6040516102049190610bda565b60405180910390f35b34801561021957600080fd5b506102226106b9565b60405161022f9190610c0b565b60405180910390f35b60003411610272576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200183815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906103419291906106c1565b50606082015181600301908051906020019061035e9291906106c1565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c4284846040516103ab93929190610c26565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061041557600080fd5b565b600033905090565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156105f957838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546104d690610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461050290610c9a565b801561054f5780601f106105245761010080835404028352916020019161054f565b820191906000526020600020905b81548152906001019060200180831161053257829003601f168201915b5050505050815260200160038201805461056890610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461059490610c9a565b80156105e15780601f106105b6576101008083540402835291602001916105e1565b820191906000526020600020905b8154815290600101906020018083116105c457829003601f168201915b50505050508152505081526020019060010190610443565b50505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001805461063890610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461066490610c9a565b80156106b15780601f10610686576101008083540402835291602001916106b1565b820191906000526020600020905b81548152906001019060200180831161069457829003601f168201915b505050505081565b600047905090565b8280546106cd90610c9a565b90600052602060002090601f0160209004810192826106ef5760008555610736565b82601f1061070857805160ff1916838001178555610736565b82800160010185558215610736579182015b8281111561073557825182559160200191906001019061071a565b5b5090506107439190610747565b5090565b5b80821115610760576000816000905550600101610748565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107cb82610782565b810181811067ffffffffffffffff821117156107ea576107e9610793565b5b80604052505050565b60006107fd610764565b905061080982826107c2565b919050565b600067ffffffffffffffff82111561082957610828610793565b5b61083282610782565b9050602081019050919050565b82818337600083830152505050565b600061086161085c8461080e565b6107f3565b90508281526020810184848401111561087d5761087c61077d565b5b61088884828561083f565b509392505050565b600082601f8301126108a5576108a4610778565b5b81356108b584826020860161084e565b91505092915050565b600080604083850312156108d5576108d461076e565b5b600083013567ffffffffffffffff8111156108f3576108f2610773565b5b6108ff85828601610890565b925050602083013567ffffffffffffffff8111156109205761091f610773565b5b61092c85828601610890565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061096182610936565b9050919050565b61097181610956565b82525050565b600060208201905061098c6000830184610968565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6109c781610956565b82525050565b6000819050919050565b6109e0816109cd565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a20578082015181840152602081019050610a05565b83811115610a2f576000848401525b50505050565b6000610a40826109e6565b610a4a81856109f1565b9350610a5a818560208601610a02565b610a6381610782565b840191505092915050565b6000608083016000830151610a8660008601826109be565b506020830151610a9960208601826109d7565b5060408301518482036040860152610ab18282610a35565b91505060608301518482036060860152610acb8282610a35565b9150508091505092915050565b6000610ae48383610a6e565b905092915050565b6000602082019050919050565b6000610b0482610992565b610b0e818561099d565b935083602082028501610b20856109ae565b8060005b85811015610b5c5784840389528151610b3d8582610ad8565b9450610b4883610aec565b925060208a01995050600181019050610b24565b50829750879550505050505092915050565b60006020820190508181036000830152610b888184610af9565b905092915050565b600082825260208201905092915050565b6000610bac826109e6565b610bb68185610b90565b9350610bc6818560208601610a02565b610bcf81610782565b840191505092915050565b60006020820190508181036000830152610bf48184610ba1565b905092915050565b610c05816109cd565b82525050565b6000602082019050610c206000830184610bfc565b92915050565b6000606082019050610c3b6000830186610bfc565b8181036020830152610c4d8185610ba1565b90508181036040830152610c618184610ba1565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cb257607f821691505b60208210811415610cc657610cc5610c6b565b5b5091905056fea264697066735822122039d2a5ddcb84d62d8cc71d59af3462c5eef5828f278c08a93b38f14ef0eacd9964736f6c634300080a0033a2646970667358221220c095eafe91cd919cd0ee0c3ff2143d5af0d592a9385eb6eccbcb6e34aa2d1e0664736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "checkMsgSender()": {
        "details": "check the balance of the owner"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 192,
        "contract": "contracts/CoffeeFactory.sol:CoffeeFactory",
        "label": "allCoffeeContracts",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(CoffeeFactoryStruct)187_storage)"
      },
      {
        "astId": 196,
        "contract": "contracts/CoffeeFactory.sol:CoffeeFactory",
        "label": "searchHandles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 198,
        "contract": "contracts/CoffeeFactory.sol:CoffeeFactory",
        "label": "numCoffeeContracts",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_struct(CoffeeFactoryStruct)187_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct CoffeeFactory.CoffeeFactoryStruct)",
        "numberOfBytes": "32",
        "value": "t_struct(CoffeeFactoryStruct)187_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(CoffeeFactoryStruct)187_storage": {
        "encoding": "inplace",
        "label": "struct CoffeeFactory.CoffeeFactoryStruct",
        "members": [
          {
            "astId": 180,
            "contract": "contracts/CoffeeFactory.sol:CoffeeFactory",
            "label": "_coffeeIndex",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 182,
            "contract": "contracts/CoffeeFactory.sol:CoffeeFactory",
            "label": "_contract",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 184,
            "contract": "contracts/CoffeeFactory.sol:CoffeeFactory",
            "label": "_owner",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 186,
            "contract": "contracts/CoffeeFactory.sol:CoffeeFactory",
            "label": "_handle",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
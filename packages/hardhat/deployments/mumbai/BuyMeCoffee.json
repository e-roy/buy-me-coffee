{
  "address": "0x1FEB068bE8F3Ceb9e35C0912AB407144Fd13dAdE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "__handle",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "__owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvaildCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "NewMemo",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "_handle",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "buyCoffee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkMsgSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMemos",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "internalType": "struct BuyMeCoffee.Memo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTips",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xcb387070f2f3b3b3a5c65814ceb70c93b54b8d10373de1ec3b2cf8898aa92d3d",
  "receipt": {
    "to": null,
    "from": "0xe6606766A52848b29c1C5E80c7b03eF41F126d74",
    "contractAddress": "0x1FEB068bE8F3Ceb9e35C0912AB407144Fd13dAdE",
    "transactionIndex": 24,
    "gasUsed": "811494",
    "logsBloom": "0x
    "blockHash": "0x04c013ce93fcc836701ae05d2f0f4079006de1e6fe94af7954afc06cd6172833",
    "transactionHash": "0xcb387070f2f3b3b3a5c65814ceb70c93b54b8d10373de1ec3b2cf8898aa92d3d",
    "logs": [
      {
        "transactionIndex": 24,
        "blockNumber": 26674628,
        "transactionHash": "0xcb387070f2f3b3b3a5c65814ceb70c93b54b8d10373de1ec3b2cf8898aa92d3d",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000e6606766a52848b29c1c5e80c7b03ef41f126d74",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000039b6e2950e0080000000000000000000000000000000000000000000000001acb0e4360b1cd130000000000000000000000000000000000000000000003285a7150b22e09d11c0000000000000000000000000000000000000000000000001ac772d53760ed0b0000000000000000000000000000000000000000000003285a74ec20575ab124",
        "logIndex": 60,
        "blockHash": "0x04c013ce93fcc836701ae05d2f0f4079006de1e6fe94af7954afc06cd6172833"
      }
    ],
    "blockNumber": 26674628,
    "cumulativeGasUsed": "4415667",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "testhandle",
    "0x0000000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "db5a63ea4b003629014fae01bf15cebe",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"__handle\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"__owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvaildCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"NewMemo\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_handle\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"buyCoffee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkMsgSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMemos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"internalType\":\"struct BuyMeCoffee.Memo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTips\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyCoffee(string,string)\":{\"details\":\"buy a coffee for owner (sends an ETH tip and leaves a memo)\",\"params\":{\"_message\":\"a nice message from the purchaser\",\"_name\":\"name of the coffee purchaser\"}},\"checkBalance()\":{\"details\":\"check the balance of the owner\"},\"checkMsgSender()\":{\"details\":\"check the balance of the owner\"},\"getMemos()\":{\"details\":\"fetches all stored memos\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"withdrawTips()\":{\"details\":\"send the entire balance stored in this contract to the owner\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyMeCoffee.sol\":\"BuyMeCoffee\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BuyMeCoffee.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n// import \\\"./modified/Ownable.sol\\\";\\r\\nimport \\\"./utils/Context.sol\\\";\\r\\n\\r\\nerror Unauthorized();\\r\\nerror InvalidAmount();\\r\\nerror InvaildCall();\\r\\n\\r\\ncontract BuyMeCoffee is Context {\\r\\n    // Event to emit when a Memo is created.\\r\\n    event NewMemo(\\r\\n        address indexed from,\\r\\n        uint256 timestamp,\\r\\n        string name,\\r\\n        string message\\r\\n    );\\r\\n\\r\\n    // Memo struct.\\r\\n    struct Memo {\\r\\n        address from;\\r\\n        uint256 timestamp;\\r\\n        string name;\\r\\n        string message;\\r\\n    }\\r\\n\\r\\n    // Address of contract deployer. Marked payable so that\\r\\n    // we can withdraw to this address later.\\r\\n    address payable _owner;\\r\\n\\r\\n    string public _handle;\\r\\n\\r\\n    // List of all memos received from coffee purchases.\\r\\n    Memo[] memos;\\r\\n\\r\\n    constructor(string memory __handle, address __owner) {\\r\\n        // Store the address of the deployer as a payable address.\\r\\n        // When we withdraw funds, we'll withdraw here.\\r\\n        _owner = payable(__owner);\\r\\n        _handle = __handle;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev fetches all stored memos\\r\\n     */\\r\\n    function getMemos() public view returns (Memo[] memory) {\\r\\n        return memos;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev buy a coffee for owner (sends an ETH tip and leaves a memo)\\r\\n     * @param _name name of the coffee purchaser\\r\\n     * @param _message a nice message from the purchaser\\r\\n     */\\r\\n    function buyCoffee(string memory _name, string memory _message)\\r\\n        public\\r\\n        payable\\r\\n    {\\r\\n        // Must accept more than 0 ETH for a coffee.\\r\\n        if (msg.value <= 0) revert InvalidAmount();\\r\\n\\r\\n        // Add the memo to storage!\\r\\n        memos.push(Memo(msg.sender, block.timestamp, _name, _message));\\r\\n\\r\\n        // Emit a NewMemo event with details about the memo.\\r\\n        emit NewMemo(msg.sender, block.timestamp, _name, _message);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev send the entire balance stored in this contract to the owner\\r\\n     */\\r\\n    function withdrawTips() public {\\r\\n        // if (msg.sender != owner()) {\\r\\n        //     revert Unauthorized();\\r\\n        // }\\r\\n        // require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        require(_owner.send(address(this).balance));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev check the balance of the owner\\r\\n     */\\r\\n    function checkBalance() public view returns (uint256 balance) {\\r\\n        // if (msg.sender != owner()) {\\r\\n        //     revert Unauthorized();\\r\\n        // }\\r\\n        // require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        return address(this).balance;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev check the balance of the owner\\r\\n     */\\r\\n    function checkMsgSender() public view returns (address) {\\r\\n        // if (msg.sender != owner()) {\\r\\n        //     revert Unauthorized();\\r\\n        // }\\r\\n        // return _msgSender();\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev set receive function\\r\\n     */\\r\\n    receive() external payable {\\r\\n        buyCoffee(\\\"default anon\\\", \\\"here's a coffee\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev set fallback function\\r\\n     */\\r\\n    fallback() external {\\r\\n        revert InvaildCall();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6a80b66588d6cc660901a791e36aa41339313d06fc894eaed9dfed336932934c\",\"license\":\"MIT\"},\"contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620011273803806200112783398181016040528101906200003791906200034a565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600190805190602001906200008f92919062000098565b50505062000415565b828054620000a690620003df565b90600052602060002090601f016020900481019282620000ca576000855562000116565b82601f10620000e557805160ff191683800117855562000116565b8280016001018555821562000116579182015b8281111562000115578251825591602001919060010190620000f8565b5b50905062000125919062000129565b5090565b5b80821115620001445760008160009055506001016200012a565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001b18262000166565b810181811067ffffffffffffffff82111715620001d357620001d262000177565b5b80604052505050565b6000620001e862000148565b9050620001f68282620001a6565b919050565b600067ffffffffffffffff82111562000219576200021862000177565b5b620002248262000166565b9050602081019050919050565b60005b838110156200025157808201518184015260208101905062000234565b8381111562000261576000848401525b50505050565b60006200027e6200027884620001fb565b620001dc565b9050828152602081018484840111156200029d576200029c62000161565b5b620002aa84828562000231565b509392505050565b600082601f830112620002ca57620002c96200015c565b5b8151620002dc84826020860162000267565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200031282620002e5565b9050919050565b620003248162000305565b81146200033057600080fd5b50565b600081519050620003448162000319565b92915050565b6000806040838503121562000364576200036362000152565b5b600083015167ffffffffffffffff81111562000385576200038462000157565b5b6200039385828601620002b2565b9250506020620003a68582860162000333565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620003f857607f821691505b602082108114156200040f576200040e620003b0565b5b50919050565b610d0280620004256000396000f3fe6080604052600436106100745760003560e01c8063865c51721161004e578063865c51721461018c5780638da5cb5b146101b7578063b86f3c83146101e2578063c71daccb1461020d576100ef565b8063204206e11461012e5780633aaa74b21461014a5780634cd3d5ca14610161576100ef565b366100ef576100ed6040518060400160405280600c81526020017f64656661756c7420616e6f6e00000000000000000000000000000000000000008152506040518060400160405280600f81526020017f686572652773206120636f666665650000000000000000000000000000000000815250610238565b005b3480156100fb57600080fd5b506040517f0dfe893a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610148600480360381019061014391906108be565b610238565b005b34801561015657600080fd5b5061015f6103b7565b005b34801561016d57600080fd5b50610176610417565b6040516101839190610977565b60405180910390f35b34801561019857600080fd5b506101a161041f565b6040516101ae9190610b6e565b60405180910390f35b3480156101c357600080fd5b506101cc610602565b6040516101d99190610977565b60405180910390f35b3480156101ee57600080fd5b506101f761062b565b6040516102049190610bda565b60405180910390f35b34801561021957600080fd5b506102226106b9565b60405161022f9190610c0b565b60405180910390f35b60003411610272576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200183815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906103419291906106c1565b50606082015181600301908051906020019061035e9291906106c1565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c4284846040516103ab93929190610c26565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061041557600080fd5b565b600033905090565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156105f957838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546104d690610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461050290610c9a565b801561054f5780601f106105245761010080835404028352916020019161054f565b820191906000526020600020905b81548152906001019060200180831161053257829003601f168201915b5050505050815260200160038201805461056890610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461059490610c9a565b80156105e15780601f106105b6576101008083540402835291602001916105e1565b820191906000526020600020905b8154815290600101906020018083116105c457829003601f168201915b50505050508152505081526020019060010190610443565b50505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001805461063890610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461066490610c9a565b80156106b15780601f10610686576101008083540402835291602001916106b1565b820191906000526020600020905b81548152906001019060200180831161069457829003601f168201915b505050505081565b600047905090565b8280546106cd90610c9a565b90600052602060002090601f0160209004810192826106ef5760008555610736565b82601f1061070857805160ff1916838001178555610736565b82800160010185558215610736579182015b8281111561073557825182559160200191906001019061071a565b5b5090506107439190610747565b5090565b5b80821115610760576000816000905550600101610748565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107cb82610782565b810181811067ffffffffffffffff821117156107ea576107e9610793565b5b80604052505050565b60006107fd610764565b905061080982826107c2565b919050565b600067ffffffffffffffff82111561082957610828610793565b5b61083282610782565b9050602081019050919050565b82818337600083830152505050565b600061086161085c8461080e565b6107f3565b90508281526020810184848401111561087d5761087c61077d565b5b61088884828561083f565b509392505050565b600082601f8301126108a5576108a4610778565b5b81356108b584826020860161084e565b91505092915050565b600080604083850312156108d5576108d461076e565b5b600083013567ffffffffffffffff8111156108f3576108f2610773565b5b6108ff85828601610890565b925050602083013567ffffffffffffffff8111156109205761091f610773565b5b61092c85828601610890565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061096182610936565b9050919050565b61097181610956565b82525050565b600060208201905061098c6000830184610968565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6109c781610956565b82525050565b6000819050919050565b6109e0816109cd565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a20578082015181840152602081019050610a05565b83811115610a2f576000848401525b50505050565b6000610a40826109e6565b610a4a81856109f1565b9350610a5a818560208601610a02565b610a6381610782565b840191505092915050565b6000608083016000830151610a8660008601826109be565b506020830151610a9960208601826109d7565b5060408301518482036040860152610ab18282610a35565b91505060608301518482036060860152610acb8282610a35565b9150508091505092915050565b6000610ae48383610a6e565b905092915050565b6000602082019050919050565b6000610b0482610992565b610b0e818561099d565b935083602082028501610b20856109ae565b8060005b85811015610b5c5784840389528151610b3d8582610ad8565b9450610b4883610aec565b925060208a01995050600181019050610b24565b50829750879550505050505092915050565b60006020820190508181036000830152610b888184610af9565b905092915050565b600082825260208201905092915050565b6000610bac826109e6565b610bb68185610b90565b9350610bc6818560208601610a02565b610bcf81610782565b840191505092915050565b60006020820190508181036000830152610bf48184610ba1565b905092915050565b610c05816109cd565b82525050565b6000602082019050610c206000830184610bfc565b92915050565b6000606082019050610c3b6000830186610bfc565b8181036020830152610c4d8185610ba1565b90508181036040830152610c618184610ba1565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cb257607f821691505b60208210811415610cc657610cc5610c6b565b5b5091905056fea264697066735822122039d2a5ddcb84d62d8cc71d59af3462c5eef5828f278c08a93b38f14ef0eacd9964736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063865c51721161004e578063865c51721461018c5780638da5cb5b146101b7578063b86f3c83146101e2578063c71daccb1461020d576100ef565b8063204206e11461012e5780633aaa74b21461014a5780634cd3d5ca14610161576100ef565b366100ef576100ed6040518060400160405280600c81526020017f64656661756c7420616e6f6e00000000000000000000000000000000000000008152506040518060400160405280600f81526020017f686572652773206120636f666665650000000000000000000000000000000000815250610238565b005b3480156100fb57600080fd5b506040517f0dfe893a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610148600480360381019061014391906108be565b610238565b005b34801561015657600080fd5b5061015f6103b7565b005b34801561016d57600080fd5b50610176610417565b6040516101839190610977565b60405180910390f35b34801561019857600080fd5b506101a161041f565b6040516101ae9190610b6e565b60405180910390f35b3480156101c357600080fd5b506101cc610602565b6040516101d99190610977565b60405180910390f35b3480156101ee57600080fd5b506101f761062b565b6040516102049190610bda565b60405180910390f35b34801561021957600080fd5b506102226106b9565b60405161022f9190610c0b565b60405180910390f35b60003411610272576040517f2c5211c600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200183815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906103419291906106c1565b50606082015181600301908051906020019061035e9291906106c1565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c4284846040516103ab93929190610c26565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505061041557600080fd5b565b600033905090565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156105f957838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546104d690610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461050290610c9a565b801561054f5780601f106105245761010080835404028352916020019161054f565b820191906000526020600020905b81548152906001019060200180831161053257829003601f168201915b5050505050815260200160038201805461056890610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461059490610c9a565b80156105e15780601f106105b6576101008083540402835291602001916105e1565b820191906000526020600020905b8154815290600101906020018083116105c457829003601f168201915b50505050508152505081526020019060010190610443565b50505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001805461063890610c9a565b80601f016020809104026020016040519081016040528092919081815260200182805461066490610c9a565b80156106b15780601f10610686576101008083540402835291602001916106b1565b820191906000526020600020905b81548152906001019060200180831161069457829003601f168201915b505050505081565b600047905090565b8280546106cd90610c9a565b90600052602060002090601f0160209004810192826106ef5760008555610736565b82601f1061070857805160ff1916838001178555610736565b82800160010185558215610736579182015b8281111561073557825182559160200191906001019061071a565b5b5090506107439190610747565b5090565b5b80821115610760576000816000905550600101610748565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6107cb82610782565b810181811067ffffffffffffffff821117156107ea576107e9610793565b5b80604052505050565b60006107fd610764565b905061080982826107c2565b919050565b600067ffffffffffffffff82111561082957610828610793565b5b61083282610782565b9050602081019050919050565b82818337600083830152505050565b600061086161085c8461080e565b6107f3565b90508281526020810184848401111561087d5761087c61077d565b5b61088884828561083f565b509392505050565b600082601f8301126108a5576108a4610778565b5b81356108b584826020860161084e565b91505092915050565b600080604083850312156108d5576108d461076e565b5b600083013567ffffffffffffffff8111156108f3576108f2610773565b5b6108ff85828601610890565b925050602083013567ffffffffffffffff8111156109205761091f610773565b5b61092c85828601610890565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061096182610936565b9050919050565b61097181610956565b82525050565b600060208201905061098c6000830184610968565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6109c781610956565b82525050565b6000819050919050565b6109e0816109cd565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a20578082015181840152602081019050610a05565b83811115610a2f576000848401525b50505050565b6000610a40826109e6565b610a4a81856109f1565b9350610a5a818560208601610a02565b610a6381610782565b840191505092915050565b6000608083016000830151610a8660008601826109be565b506020830151610a9960208601826109d7565b5060408301518482036040860152610ab18282610a35565b91505060608301518482036060860152610acb8282610a35565b9150508091505092915050565b6000610ae48383610a6e565b905092915050565b6000602082019050919050565b6000610b0482610992565b610b0e818561099d565b935083602082028501610b20856109ae565b8060005b85811015610b5c5784840389528151610b3d8582610ad8565b9450610b4883610aec565b925060208a01995050600181019050610b24565b50829750879550505050505092915050565b60006020820190508181036000830152610b888184610af9565b905092915050565b600082825260208201905092915050565b6000610bac826109e6565b610bb68185610b90565b9350610bc6818560208601610a02565b610bcf81610782565b840191505092915050565b60006020820190508181036000830152610bf48184610ba1565b905092915050565b610c05816109cd565b82525050565b6000602082019050610c206000830184610bfc565b92915050565b6000606082019050610c3b6000830186610bfc565b8181036020830152610c4d8185610ba1565b90508181036040830152610c618184610ba1565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cb257607f821691505b60208210811415610cc657610cc5610c6b565b5b5091905056fea264697066735822122039d2a5ddcb84d62d8cc71d59af3462c5eef5828f278c08a93b38f14ef0eacd9964736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buyCoffee(string,string)": {
        "details": "buy a coffee for owner (sends an ETH tip and leaves a memo)",
        "params": {
          "_message": "a nice message from the purchaser",
          "_name": "name of the coffee purchaser"
        }
      },
      "checkBalance()": {
        "details": "check the balance of the owner"
      },
      "checkMsgSender()": {
        "details": "check the balance of the owner"
      },
      "getMemos()": {
        "details": "fetches all stored memos"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "withdrawTips()": {
        "details": "send the entire balance stored in this contract to the owner"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 31,
        "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 33,
        "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
        "label": "_handle",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 37,
        "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
        "label": "memos",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(Memo)29_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Memo)29_storage)dyn_storage": {
        "base": "t_struct(Memo)29_storage",
        "encoding": "dynamic_array",
        "label": "struct BuyMeCoffee.Memo[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Memo)29_storage": {
        "encoding": "inplace",
        "label": "struct BuyMeCoffee.Memo",
        "members": [
          {
            "astId": 22,
            "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
            "label": "from",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 24,
            "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 26,
            "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 28,
            "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
            "label": "message",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "NewMemo",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_message",
          "type": "string"
        }
      ],
      "name": "buyCoffee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMemos",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "internalType": "struct BuyMeCoffee.Memo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTips",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xfc525eea50c10da5d58939d896f169453d9ff3f1c105bc4d15adf7ebd5c371d9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "683374",
    "logsBloom": "0x
    "blockHash": "0x005653a34921e776f41289cb86c29072d8a104f5a72ec26ed7a4d6e14a3fad0d",
    "transactionHash": "0xfc525eea50c10da5d58939d896f169453d9ff3f1c105bc4d15adf7ebd5c371d9",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "683374",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e00057af611dddac7c0df2a9b75018f2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"NewMemo\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_message\",\"type\":\"string\"}],\"name\":\"buyCoffee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMemos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"internalType\":\"struct BuyMeCoffee.Memo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTips\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyCoffee(string,string)\":{\"details\":\"buy a coffee for owner (sends an ETH tip and leaves a memo)\",\"params\":{\"_message\":\"a nice message from the purchaser\",\"_name\":\"name of the coffee purchaser\"}},\"checkBalance()\":{\"details\":\"check the balance of the owner\"},\"getMemos()\":{\"details\":\"fetches all stored memos\"},\"withdrawTips()\":{\"details\":\"send the entire balance stored in this contract to the owner\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyMeCoffee.sol\":\"BuyMeCoffee\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BuyMeCoffee.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ncontract BuyMeCoffee {\\r\\n    // Event to emit when a Memo is created.\\r\\n    event NewMemo(\\r\\n        address indexed from,\\r\\n        uint256 timestamp,\\r\\n        string name,\\r\\n        string message\\r\\n    );\\r\\n\\r\\n    // Memo struct.\\r\\n    struct Memo {\\r\\n        address from;\\r\\n        uint256 timestamp;\\r\\n        string name;\\r\\n        string message;\\r\\n    }\\r\\n\\r\\n    // Address of contract deployer. Marked payable so that\\r\\n    // we can withdraw to this address later.\\r\\n    address payable owner;\\r\\n\\r\\n    // List of all memos received from coffee purchases.\\r\\n    Memo[] memos;\\r\\n\\r\\n    constructor() {\\r\\n        // Store the address of the deployer as a payable address.\\r\\n        // When we withdraw funds, we'll withdraw here.\\r\\n        owner = payable(msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev fetches all stored memos\\r\\n     */\\r\\n    function getMemos() public view returns (Memo[] memory) {\\r\\n        return memos;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev buy a coffee for owner (sends an ETH tip and leaves a memo)\\r\\n     * @param _name name of the coffee purchaser\\r\\n     * @param _message a nice message from the purchaser\\r\\n     */\\r\\n    function buyCoffee(string memory _name, string memory _message)\\r\\n        public\\r\\n        payable\\r\\n    {\\r\\n        // Must accept more than 0 ETH for a coffee.\\r\\n        require(msg.value > 0, \\\"can't buy coffee for free!\\\");\\r\\n\\r\\n        // Add the memo to storage!\\r\\n        memos.push(Memo(msg.sender, block.timestamp, _name, _message));\\r\\n\\r\\n        // Emit a NewMemo event with details about the memo.\\r\\n        emit NewMemo(msg.sender, block.timestamp, _name, _message);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev send the entire balance stored in this contract to the owner\\r\\n     */\\r\\n    function withdrawTips() public {\\r\\n        require(owner.send(address(this).balance));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev check the balance of the owner\\r\\n     */\\r\\n    function checkBalance() public view returns (uint256 balance) {\\r\\n        return address(this).balance;\\r\\n        // require(owner.send(address(this).balance));\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x8632e7f7aae0fb666da98fead0f27f86ab0e63fef6da587036522a02dd650cc9\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b01806100606000396000f3fe60806040526004361061003f5760003560e01c8063204206e1146100445780633aaa74b214610060578063865c517214610077578063c71daccb146100a2575b600080fd5b61005e6004803603810190610059919061069d565b6100cd565b005b34801561006c57600080fd5b50610075610255565b005b34801561008357600080fd5b5061008c6102b5565b6040516100999190610923565b60405180910390f35b3480156100ae57600080fd5b506100b7610498565b6040516100c49190610954565b60405180910390f35b60003411610110576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610107906109cc565b60405180910390fd5b600160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200183815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906101df9291906104a0565b5060608201518160030190805190602001906101fc9291906104a0565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c42848460405161024993929190610a25565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050506102b357600080fd5b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561048f57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461036c90610a99565b80601f016020809104026020016040519081016040528092919081815260200182805461039890610a99565b80156103e55780601f106103ba576101008083540402835291602001916103e5565b820191906000526020600020905b8154815290600101906020018083116103c857829003601f168201915b505050505081526020016003820180546103fe90610a99565b80601f016020809104026020016040519081016040528092919081815260200182805461042a90610a99565b80156104775780601f1061044c57610100808354040283529160200191610477565b820191906000526020600020905b81548152906001019060200180831161045a57829003601f168201915b505050505081525050815260200190600101906102d9565b50505050905090565b600047905090565b8280546104ac90610a99565b90600052602060002090601f0160209004810192826104ce5760008555610515565b82601f106104e757805160ff1916838001178555610515565b82800160010185558215610515579182015b828111156105145782518255916020019190600101906104f9565b5b5090506105229190610526565b5090565b5b8082111561053f576000816000905550600101610527565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105aa82610561565b810181811067ffffffffffffffff821117156105c9576105c8610572565b5b80604052505050565b60006105dc610543565b90506105e882826105a1565b919050565b600067ffffffffffffffff82111561060857610607610572565b5b61061182610561565b9050602081019050919050565b82818337600083830152505050565b600061064061063b846105ed565b6105d2565b90508281526020810184848401111561065c5761065b61055c565b5b61066784828561061e565b509392505050565b600082601f83011261068457610683610557565b5b813561069484826020860161062d565b91505092915050565b600080604083850312156106b4576106b361054d565b5b600083013567ffffffffffffffff8111156106d2576106d1610552565b5b6106de8582860161066f565b925050602083013567ffffffffffffffff8111156106ff576106fe610552565b5b61070b8582860161066f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076c82610741565b9050919050565b61077c81610761565b82525050565b6000819050919050565b61079581610782565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107d55780820151818401526020810190506107ba565b838111156107e4576000848401525b50505050565b60006107f58261079b565b6107ff81856107a6565b935061080f8185602086016107b7565b61081881610561565b840191505092915050565b600060808301600083015161083b6000860182610773565b50602083015161084e602086018261078c565b506040830151848203604086015261086682826107ea565b9150506060830151848203606086015261088082826107ea565b9150508091505092915050565b60006108998383610823565b905092915050565b6000602082019050919050565b60006108b982610715565b6108c38185610720565b9350836020820285016108d585610731565b8060005b8581101561091157848403895281516108f2858261088d565b94506108fd836108a1565b925060208a019950506001810190506108d9565b50829750879550505050505092915050565b6000602082019050818103600083015261093d81846108ae565b905092915050565b61094e81610782565b82525050565b60006020820190506109696000830184610945565b92915050565b600082825260208201905092915050565b7f63616e27742062757920636f6666656520666f72206672656521000000000000600082015250565b60006109b6601a8361096f565b91506109c182610980565b602082019050919050565b600060208201905081810360008301526109e5816109a9565b9050919050565b60006109f78261079b565b610a01818561096f565b9350610a118185602086016107b7565b610a1a81610561565b840191505092915050565b6000606082019050610a3a6000830186610945565b8181036020830152610a4c81856109ec565b90508181036040830152610a6081846109ec565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ab157607f821691505b60208210811415610ac557610ac4610a6a565b5b5091905056fea2646970667358221220082f98bbcecd29558c44f39595d7463ac0eeb436f101c0df853b07f608cf8c0964736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c8063204206e1146100445780633aaa74b214610060578063865c517214610077578063c71daccb146100a2575b600080fd5b61005e6004803603810190610059919061069d565b6100cd565b005b34801561006c57600080fd5b50610075610255565b005b34801561008357600080fd5b5061008c6102b5565b6040516100999190610923565b60405180910390f35b3480156100ae57600080fd5b506100b7610498565b6040516100c49190610954565b60405180910390f35b60003411610110576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610107906109cc565b60405180910390fd5b600160405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200183815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906101df9291906104a0565b5060608201518160030190805190602001906101fc9291906104a0565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c42848460405161024993929190610a25565b60405180910390a25050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050506102b357600080fd5b565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561048f57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461036c90610a99565b80601f016020809104026020016040519081016040528092919081815260200182805461039890610a99565b80156103e55780601f106103ba576101008083540402835291602001916103e5565b820191906000526020600020905b8154815290600101906020018083116103c857829003601f168201915b505050505081526020016003820180546103fe90610a99565b80601f016020809104026020016040519081016040528092919081815260200182805461042a90610a99565b80156104775780601f1061044c57610100808354040283529160200191610477565b820191906000526020600020905b81548152906001019060200180831161045a57829003601f168201915b505050505081525050815260200190600101906102d9565b50505050905090565b600047905090565b8280546104ac90610a99565b90600052602060002090601f0160209004810192826104ce5760008555610515565b82601f106104e757805160ff1916838001178555610515565b82800160010185558215610515579182015b828111156105145782518255916020019190600101906104f9565b5b5090506105229190610526565b5090565b5b8082111561053f576000816000905550600101610527565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105aa82610561565b810181811067ffffffffffffffff821117156105c9576105c8610572565b5b80604052505050565b60006105dc610543565b90506105e882826105a1565b919050565b600067ffffffffffffffff82111561060857610607610572565b5b61061182610561565b9050602081019050919050565b82818337600083830152505050565b600061064061063b846105ed565b6105d2565b90508281526020810184848401111561065c5761065b61055c565b5b61066784828561061e565b509392505050565b600082601f83011261068457610683610557565b5b813561069484826020860161062d565b91505092915050565b600080604083850312156106b4576106b361054d565b5b600083013567ffffffffffffffff8111156106d2576106d1610552565b5b6106de8582860161066f565b925050602083013567ffffffffffffffff8111156106ff576106fe610552565b5b61070b8582860161066f565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076c82610741565b9050919050565b61077c81610761565b82525050565b6000819050919050565b61079581610782565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107d55780820151818401526020810190506107ba565b838111156107e4576000848401525b50505050565b60006107f58261079b565b6107ff81856107a6565b935061080f8185602086016107b7565b61081881610561565b840191505092915050565b600060808301600083015161083b6000860182610773565b50602083015161084e602086018261078c565b506040830151848203604086015261086682826107ea565b9150506060830151848203606086015261088082826107ea565b9150508091505092915050565b60006108998383610823565b905092915050565b6000602082019050919050565b60006108b982610715565b6108c38185610720565b9350836020820285016108d585610731565b8060005b8581101561091157848403895281516108f2858261088d565b94506108fd836108a1565b925060208a019950506001810190506108d9565b50829750879550505050505092915050565b6000602082019050818103600083015261093d81846108ae565b905092915050565b61094e81610782565b82525050565b60006020820190506109696000830184610945565b92915050565b600082825260208201905092915050565b7f63616e27742062757920636f6666656520666f72206672656521000000000000600082015250565b60006109b6601a8361096f565b91506109c182610980565b602082019050919050565b600060208201905081810360008301526109e5816109a9565b9050919050565b60006109f78261079b565b610a01818561096f565b9350610a118185602086016107b7565b610a1a81610561565b840191505092915050565b6000606082019050610a3a6000830186610945565b8181036020830152610a4c81856109ec565b90508181036040830152610a6081846109ec565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ab157607f821691505b60208210811415610ac557610ac4610a6a565b5b5091905056fea2646970667358221220082f98bbcecd29558c44f39595d7463ac0eeb436f101c0df853b07f608cf8c0964736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buyCoffee(string,string)": {
        "details": "buy a coffee for owner (sends an ETH tip and leaves a memo)",
        "params": {
          "_message": "a nice message from the purchaser",
          "_name": "name of the coffee purchaser"
        }
      },
      "checkBalance()": {
        "details": "check the balance of the owner"
      },
      "getMemos()": {
        "details": "fetches all stored memos"
      },
      "withdrawTips()": {
        "details": "send the entire balance stored in this contract to the owner"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22,
        "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 26,
        "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
        "label": "memos",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Memo)20_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Memo)20_storage)dyn_storage": {
        "base": "t_struct(Memo)20_storage",
        "encoding": "dynamic_array",
        "label": "struct BuyMeCoffee.Memo[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Memo)20_storage": {
        "encoding": "inplace",
        "label": "struct BuyMeCoffee.Memo",
        "members": [
          {
            "astId": 13,
            "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
            "label": "from",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 15,
            "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 17,
            "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 19,
            "contract": "contracts/BuyMeCoffee.sol:BuyMeCoffee",
            "label": "message",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}